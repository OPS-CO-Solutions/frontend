name: frontend-1.0.$(Build.BuildId)

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  artifactName: 'frontend'

steps:
- script: |
    echo "Checking for source changes (excluding YAML files)..."

    git fetch --unshallow || echo "Full history already present"

    CHANGED_FILES=$(git diff --name-only HEAD HEAD~1 -- . ':(exclude)*.yml' ':(exclude)*.yaml')

    echo "Changed files:"
    echo "$CHANGED_FILES"

    if [ -z "$CHANGED_FILES" ]; then
      echo "##vso[task.setvariable variable=skip_build;]true"
      echo "##vso[task.complete result=Skipped;]No relevant source changes detected. Marking build as Skipped."
    fi
  displayName: 'Skip Build Gracefully If No Source Changes'
  
- script: |
    echo "Packaging frontend app..."
    mkdir $(Build.ArtifactStagingDirectory)/package
    cp -r static $(Build.ArtifactStagingDirectory)/package/
    cp -r templates $(Build.ArtifactStagingDirectory)/package/
    cp app.py $(Build.ArtifactStagingDirectory)/package/
    cp requirements.txt $(Build.ArtifactStagingDirectory)/package/
  displayName: 'Package Frontend Files'
  condition: and(succeeded(), ne(variables['skip_build'], 'true'))

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/package'
    artifact: '$(artifactName)'
    publishLocation: 'pipeline'
  displayName: 'Publish Frontend Pipeline Artifact'
  condition: and(succeeded(), ne(variables['skip_build'], 'true'))